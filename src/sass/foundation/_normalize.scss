@use '../helpers/functions';
@use '../helpers/mixins';
@use '../colors/colors';
@use '../foundation/settings';
@use '../grid/media-queries';

html, body {
    font-size: settings.$font-size + 0px;
	@include mixins.chain(padding, margin, 0);
	background: var(--background-color);
    color-adjust: exact;
    print-color-adjust: exact;
}

* {
	box-sizing: border-box;
	outline: none;
    border: none;

    &:disabled, &[class*="disabled"] {
        cursor: not-allowed; // TODO remove important when possible
		pointer-events: none;
    }
}

a {
    text-decoration: none;
    color: var(--primary-color);
    transition: color .1s settings.$easing-standard;

    &:hover {
        color: var(--secondary-color);
    }
}

img {
    max-width: 100%;
    height: auto;
}

// Scrollbar
::-webkit-scrollbar, ::-webkit-scrollbar-track {
    background: transparent;
}

::-webkit-scrollbar-button, ::-webkit-scrollbar-corner, ::-webkit-resizer {
    @extend %display--none;
}

::-webkit-scrollbar {
    width: functions.rem-calc(3px);
    height: functions.rem-calc(3px);

    @media #{media-queries.$sm-up} {
        width: functions.rem-calc(10px);
        height: functions.rem-calc(10px);
    }
}

::-webkit-scrollbar-thumb {
    background: var(--scrollbar-background);

	@if(settings.$theme == light and functions.in-array(dark, settings.$media-themes)) {
		@media #{settings.$dark} {
			--scrollbar-background: #{settings.$dark-scrollbar-background};
		}
	}

	@if(settings.$theme == dark and functions.in-array(light, settings.$media-themes)) {
		@media #{settings.$light} {
			--scrollbar-background: #{settings.$light-scrollbar-background};
		}
	}
}

:root {
	--scrollbar-background: #{settings.$scrollbar-background};
}

::selection {
	background: rgba(settings.$primary-color, .12);
}
