@if (in-array(text-field, $component-settings)) {
	.text-field {
		--text-field-height: #{$text-field-height};

		--text-field--active-color: #{$text-field--active-color};
		--text-field--invalid-color: #{$text-field--invalid-color};

		--text-field__label-font-size: #{$text-field__label-font-size};
		--text-field__label-color: #{$text-field__label-color};

		--text-field__input-height: #{$text-field__input-height};
		--text-field__input-color: #{$text-field__input-color};
		--text-field__input--focus-caret-color: #{$text-field__input--focus-caret-color};
		--text-field__input--focus__label-color: #{$text-field__input--focus__label-color};
		--text-field__input--focus__label-font-size: #{$text-field__input--focus__label-font-size};

		@if (in-array(helper, $text-field-settings)) {
			--text-field__helper-text-padding: #{$text-field__helper-text-padding};
			--text-field__helper-text-height: #{$text-field__helper-text-height};
		}

		@if (in-array(filled, $text-field-settings)) {
			--text-field--filled__input-padding-top: #{$text-field--filled__input-padding-top};
			--text-field--filled__input-padding-sides: #{$text-field--filled__input-padding-sides};
			--text-field--filled__input-padding: #{$text-field--filled__input-padding};
			--text-field--filled__input-background: #{$text-field--filled__input-background};
			--text-field--filled__input--border-bottom: #{$text-field--filled__input--border-bottom};
			--text-field--filled__input--focus-border-bottom: #{$text-field--filled__input--focus-border-bottom};
			--text-field--filled__input--active-border-bottom: #{$text-field--filled__input--active-border-bottom};
			--text-field--filled__input--focus__label-top: #{$text-field--filled__input--focus__label-top};
			--text-field--filled__input--active-background: #{$text-field--filled__input--active-background};
			--text-field--filled__input--invalid-border-bottom: #{$text-field--filled__input--invalid-border-bottom};
			--text-field--filled__label-left: #{$text-field--filled__label-left};
		}

		@if (in-array(outlined, $text-field-settings)) {
			--text-field--outlined__input-padding-top: #{$text-field--outlined__input-padding-top};
			--text-field--outlined__input-padding-sides: #{$text-field--outlined__input-padding-sides};
			--text-field--outlined__input-border: #{$text-field--outlined__input-border};
			--text-field--outlined__input-padding: #{$text-field--outlined__input-padding};
			--text-field--outlined__input--focus-border: #{$text-field--outlined__input--focus-border};
			--text-field--outlined__input--focus__label-top: #{$text-field--outlined__input--focus__label-top};
			--text-field--outlined__input--active-border: #{$text-field--outlined__input--active-border};
			--text-field--outlined__input--invalid-border: #{$text-field--outlined__input--invalid-border};
		}

		$el: &;
		min-height: var(--text-field-height);
		width: 100%;
		position: relative;
		margin: rem-calc(8px) 0;
		display: grid;
		grid-template-columns: 1fr auto;

		@if (in-array(filled, $text-field-settings)) {
			&--filled {
				#{$el}__input {
					padding: var(--text-field--filled__input-padding);
					background: var(--text-field--filled__input-background);
					@include border-top-radius(var(--border-radius));
					transition: border-bottom .1s $easing-standard, background .1s $easing-standard;
					border-bottom: var(--text-field--filled__input--border-bottom);

					&:hover {
					}

					&:focus {
						border-bottom: var(--text-field--filled__input--active-border-bottom);

						+ #{$el}__label {
							top: var(--text-field--filled__input--focus__label-top);
						}
					}

					&:active {
						background: var(--text-field--filled__input--active-background);
						border-bottom: var(--text-field--filled__input--active-border-bottom);
					}

					/*
					&:invalid {
						border-bottom: var(--text-field--filled__input--invalid-border-bottom);
					}*/

					&:disabled {
						border-bottom: unset;
						@extend %disabled-background;

						+ #{$el}__label {
							@extend %disabled-color;
						}
					}
				}

				input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="time"] input[type="week"], select {
					+ #{$el}__label {
						top: var(--text-field--filled__input--focus__label-top);
						font-size: var(--text-field__input--focus__label-font-size);
					}
				}

				#{$el}__label {
					left: var(--text-field--filled__input-padding-sides);
				}
			}
		}

		@if (in-array(outlined, $text-field-settings)) {
			&--outlined {
				#{$el}__input {
					background: transparent;
					border: var(--text-field--outlined__input-border);
					border-radius: var(--border-radius);
					padding: var(--text-field--outlined__input-padding);
					transition: border .1s $easing-standard;

					&:focus {
						border: var(--text-field--outlined__input--focus-border);

						+ #{$el}__label {
							top: var(--text-field--outlined__input--focus__label-top);
						}
					}

					&:active {
						border: var(--text-field--outlined__input--active-border);
					}

					&:disabled {
						@extend %disabled-border-color;

						+ #{$el}__label {
							@extend %disabled-color;
						}
					}

					/*
					&:invalid {
						border: var(--text-field--outlined__input--invalid-border);
					}*/
				}

				input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="time"] input[type="week"], select {
					+ #{$el}__label {
						top: var(--text-field--outlined__input--focus__label-top);
						font-size: var(--text-field__input--focus__label-font-size)
					}
				}

				#{$el}__label {
					background: var(--background-color);
					padding: 0 rem-calc(4px);
					left: rem-calc(8px);
				}
			}
		}

		&--active {
			&#{$el}--filled #{$el}__input {
				border-bottom: var(--text-field--filled__input--focus-border-bottom);

				+ #{$el}__label {
					top: var(--text-field--filled__input--focus__label-top);
				}
			}

			&#{$el}--outlined #{$el}__input {
				border: var(--text-field--outlined__input--focus-border);

				+ #{$el}__label {
					top: var(--text-field--outlined__input--focus__label-top);
				}
			}

			&#{$el}--filled #{$el}__input + #{$el}__label, &#{$el}--outlined #{$el}__input + #{$el}__label {
				//color: $primary-color;
				font-size: var(--text-field__input--focus__label-font-size);
			}
		}

		&__label {
			grid-column: 1;
			@extend %cursor--pointer;
			pointer-events: none;
			color: var(--text-field__label-color);
			@extend %body-1;
			position: absolute;
			transition: top .1s $easing-standard, color .1s $easing-standard;
			top: calc((var(--text-field__input-height) / 2) - (var(--text-field__label-font-size) / 2));
		}

		&__input {
			color: var(--text-field__input-color);
			@extend %body-1;
			width: 100%;
			position: absolute;
			@include chain(left, top, 0);
			min-height: var(--text-field__input-height);
			grid-column: 1;

			&:hover {
				@extend %cursor--pointer;
			}

			&:focus {
				caret-color: var(--text-field__input--focus-caret-color);
				border-color: var(--text-field--active-color);

				+ #{$el}__label {
					color: var(--text-field__input--focus__label-color);
					font-size: var(--text-field__input--focus__label-font-size);
				}
			}
		}

		@if (in-array(helper, $text-field-settings)) {
			&__helper-text {
				display: block;
				width: 100%;
				color: rgba($black, .6);
				@extend %caption;
				@include chain(height, line-height, var(--text-field__helper-text-height));
				padding: var(--text-field__helper-text-padding);
				position: absolute;
				bottom: 0;
			}

			&--helper-text {
				--text-field-height: calc(var(--text-field__input-height) + var(--text-field__helper-text-height));
			}
		}

		&--invalid {
			#{$el}__input {
				border-color: var(--text-field--invalid-color);
				caret-color: var(--text-field--invalid-color);
			}

			#{$el}__label, #{$el}__helper-text {
				color: var(--text-field--invalid-color);
			}
		}

		textarea {
			resize: none;
			overflow: hidden;
		}

		@if (in-array(select, $text-field-settings)) {
			&--select {
				select, input {
					display: none;
				}

				/*> label {
					left: var(--text-field--filled__input-padding-sides);
					@extend .text-field__label;
				}*/

				#{$el}__options {
					position: absolute;
					width: 100%;
					background: var(--background-color);
					border-radius: var(--border-radius);
					@extend %z8;
					padding: rem-calc(8px) 0;
					z-index: 2;
					overflow: auto;
					top: var(--text-field__input-height);
					max-height: var(--text-field__options-height);
					opacity: 0;
					transition: max-height .1s $easing-standard;
					pointer-events: none;

					&.active {
						transition: max-height .1s $easing-standard, opacity .1s $easing-standard;
						pointer-events: all;
						opacity: 1;
					}
				}

				#{$el}__option label {
					width: 100%;
					padding: 0 rem-calc(16px);
					@include chain(height, line-height, rem-calc(48px));
					display: block;
					background: transparent;
					@extend %cursor--pointer;

					&:hover {
						background: rgba($black, .16);
					}
				}

				// Checkbox/ radiobutton
				input:checked + label {
					background: rgba($primary-color, .16);
				}
			}
		}

		.icon {
			grid-column: 2;
			margin: 0 rem-calc(12px);
			line-height: var(--text-field-height);
		}
	}

	@include dark-theme(text-field) {
		--text-field__label-color: #{$text-field__dark__label-color};
		--text-field__input-color: #{$text-field__dark__input-color};

		@if (in-array(filled, $text-field-settings)) {
			--text-field--filled__input-background: #{$text-field__dark--filled__input-background};
			--text-field--filled__input--border-bottom: #{$text-field__dark--filled__input--border-bottom};
			--text-field--filled__input--focus-border-bottom: #{$text-field__dark--filled__input--focus-border-bottom};
			--text-field--filled__input--active-background: #{$text-field__dark--filled__input--active-background};
		}

		@if (in-array(outlined, $text-field-settings)) {
			--text-field--outlined__input-border: #{$text-field__dark--outlined__input-border};
			--text-field--outlined__input--active-border: #{$text-field__dark--outlined__input--active-border};
		}
	}

	@include light-theme(text-field) {
		--text-field__label-color: #{$text-field__light__label-color};
		--text-field__input-color: #{$text-field__light__input-color};

		@if (in-array(filled, $text-field-settings)) {
			--text-field--filled__input-background: #{$text-field__light--filled__input-background};
			--text-field--filled__input--border-bottom: #{$text-field__light--filled__input--border-bottom};
			--text-field--filled__input--focus-border-bottom: #{$text-field__light--filled__input--focus-border-bottom};
			--text-field--filled__input--active-background: #{$text-field__light--filled__input--active-background};
		}

		@if (in-array(outlined, $text-field-settings)) {
			--text-field--outlined__input-border: #{$text-field__light--outlined__input-border};
			--text-field--outlined__input--active-border: #{$text-field__light--outlined__input--active-border};
		}
	}
}

input[type="date"] {
	&:after {
		content: "\25BC";
		color: #555;
		padding: 0 rem-calc(5px);
		margin-top: rem-calc(-5px);
	}

	// Make the native arrow invisible and stretch it over the whole field so you can click anywhere in the input field to trigger the native datepicker
	&::-webkit-calendar-picker-indicator {
		position: absolute;
		@include chain(top, right, bottom, left, 0);
		@include chain(width, height, auto);
		@include chain(color, background, transparent);
	}

	// Adjust increase/decrease button
	&::-webkit-inner-spin-button, &::-webkit-clear-button {
		z-index: 1;
	}
}

// Remove the default icon from search
input[type="search"] {
	&::-webkit-search-cancel-button {
		display: none;
	}
}