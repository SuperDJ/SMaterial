@use './../index';
@use './../helpers/functions';
@use './../helpers/mixins';

@if (functions.in-array(card, index.$component-settings)) {
	.card {
		--card-background: #{index.$card-background};
		--card-border-radius: #{index.$card-border-radius};

		--card__thumbnail-size: #{index.$card__thumbnail-size};

		--card__header-padding: #{index.$card__header-padding};

		--card__title-color: #{index.$card__title-color};

		--card__subtitle-color: #{index.$card__subtitle-color};

		--card__content-color: #{index.$card__content-color};
		--card__content-padding: #{index.$card__content-padding};

		$el: &;
		background: var(--card-background);
		width: 100%;
		@extend %z1;
		border-radius: var(--card-border-radius);
		transition: box-shadow index.$easing-standard .1s, background index.$easing-standard .1s;
		@extend %display--block;
		@extend %position--relative;
		overflow: hidden;

		@if (index.$theme == dark) {
			@extend %overlay1;
		}

		&:hover {
			@extend %z8;

			@if (index.$theme == dark) {
				@extend %overlay8;
			}

			// TODO fix to extend
			@if (index.$theme == light and functions.in-array(dark, index.$media-themes)) {
				@media #{index.$dark} {
					@include overlay(8);
				}
			}
		}

		img#{$el}__thumbnail {
			grid-area: thumbnail;
			@extend %shape--circle;
			@include mixins.chain(width, height, var(--card__thumbnail-size));
		}

		&__header {
			grid-area: header;
			padding: var(--card__header-padding);
			@include mixins.border-top-radius(var(--border-radius));
		}

		&__title {
			grid-area: title;
			@extend %h6;
			color: var(--card__title-color);
		}

		&__subtitle {
			grid-area: subtitle;
			color: var(--card__subtitle-color);
		}

		&__media {
			grid-area: media;

			img {
				width: 100%;
				@extend %display--inherit;
			}
		}

		&__content {
			grid-area: content;
			color: var(--card__content-color);
			padding: var(--card__content-padding);

			> * {
				padding: 0;
			}
		}

		&__actions {
			grid-area: actions;
			padding: 0 functions.rem-calc(8px) functions.rem-calc(8px) functions.rem-calc(8px);

			> * {
				margin-right: functions.rem-calc(8px);
			}
		}

		&__header, &__media, &__content, &__actions, &__title, &__subtitle {
			width: 100%;
		}

		&--outlined {
			border: functions.rem-calc(1px) solid var(--divider-background);
			@extend %z0;

			&#{$el}--no-hover:hover {
				@extend %z0;

				@media #{index.$dark} {
					@include overlay(1);
				}
			}
		}

		&--top {
			@include mixins.chain(border-top-left-radius, border-top-right-radius, var(--border-radius));
		}

		&--bottom {
			@include mixins.chain(border-bottom-left-radius, border-bottom-right-radius, var(--border-radius));
		}

		&--left {
			@include mixins.chain(border-bottom-left-radius, border-top-left-radius, var(--border-radius));
		}

		&--right {
			@include mixins.chain(border-bottom-right-radius, border-top-right-radius, var(--border-radius));
		}

		&--no-hover:hover {
			@extend %z1, %overlay0;
		}

		// TODO fix naming
		@if (functions.in-array(default, index.$card-settings)) {
			&--default {
				#{$el}__header {
					height: functions.rem-calc(72px);
					@extend %display--grid;
					grid-template: "thumbnail title" "thumbnail subtitle";
					grid-template-columns: calc(var(--card__header-padding) + var(--card__thumbnail-size)) 1fr;
				}
			}
		}

		@if (functions.in-array(simple, index.$card-settings)) {
			&--simple {
				@extend %display--grid;
				grid-template: "header media" "content media" "actions actions";
				grid-template-columns: 1fr (functions.rem-calc(80px) + (2 * functions.rem-calc(16px)));

				#{$el}__media {
					padding: functions.rem-calc(16px);

					img {
						@include mixins.chain(width, height, functions.rem-calc(80px));
					}
				}
			}
		}

		@if (functions.in-array(overline, index.$card-settings)) {
			&--overline {
				@extend %display--grid;
				grid-template: "overline media" "header media" "content media" "actions actions";
				grid-template-columns: 1fr (functions.rem-calc(80px) + (2 * functions.rem-calc(16px)));

				.overline {
					grid-area: overline;
					padding: functions.rem-calc(16px) functions.rem-calc(16px) 0 functions.rem-calc(16px);
				}

				#{$el}__header {
					padding: functions.rem-calc(8px) functions.rem-calc(16px) 0 functions.rem-calc(16px);
				}

				#{$el}__media {
					padding: functions.rem-calc(16px);

					img {
						@include mixins.chain(width, height, functions.rem-calc(80px));
					}
				}
			}
		}

		@if (functions.in-array(album, index.$card-settings)) {
			&--album {
				@extend %display--grid;
				grid-template: "media header" "content content";
				grid-template-columns: functions.rem-calc(80px) 1fr;

				#{$el}__media img {
					@include mixins.chain(width, height, functions.rem-calc(80px));
					border-top-left-radius: var(--border-radius);
				}

				#{$el}__content {
					border: functions.rem-calc(1px) solid rgba(index.$black, .12);
				}

				#{$el}__header {
					height: functions.rem-calc(80px);
				}
			}
		}

		@if (functions.in-array(media, index.$card-settings)) {
			&--media {
				@extend %position--relative;
				@extend %display--flex;

				img {
					@extend %display--inherit;
					width: 100%;
					border-radius: var(--border-radius);
				}

				#{$el}__container {
					@extend %position--absolute;
					background: rgba(index.$white, .32);

					&--bottom {
						align-self: flex-end;
					}
				}
			}
		}
	}

	@include mixins.dark-theme(card) {
		--card-background: #{index.$card--dark-background};

		--card__title-color: #{index.$card--dark__title-color};

		--card__subtitle-color: #{index.$card--dark__subtitle-color};

		--card__content-color: #{index.$card--dark__content-color};

		@include mixins.overlay(1);
	}

	@include mixins.light-theme(card) {
		--card-background: #{index.$card--light-background};

		--card__title-color: #{index.$card--light__title-color};

		--card__subtitle-color: #{index.$card--light__subtitle-color};

		--card__content-color: #{index.$card--light__content-color};
	}
}
