@use './../index';
@use './../foundation/settings';
@use './../helpers/functions';
@use './../properties/display';
@use './../grid/media-queries';

@if(functions.in-array(app-bar, index.$component-settings)) {
	.app-bar {
		$el: &;
		--app-bar-background: #{settings.$app-bar-background};
		--app-bar-font-color: #{settings.$app-bar-font-color};
		--app-bar-padding: #{settings.$app-bar-padding};
		--app-bar__title-margin: #{settings.$app-bar__title-margin};
		--app-bar__actions-margin: #{settings.$app-bar__actions-margin};

		background: var(--app-bar-background);
		color: var(--app-bar-font-color);
		min-height: var(--app-bar-height); // Min height to allow more content in the app bar
		padding: var(--app-bar-padding);
		width: 100%;
		@extend %z4;
		@extend %display--grid;
		grid-template-columns: functions.rem-calc(24px) 1fr auto 1fr;
		margin-bottom: calc(var(--app-bar-height) * -1);

		@if(functions.in-array(title, index.$app-bar-settings)) {
			&__title {
				grid-column-start: 2;
				@extend %h6;
				margin: var(--app-bar__title-margin);
				line-height: initial;
				color: var(--app-bar-font-color);
			}
		}

		@if(functions.in-array(actions, index.$app-bar-settings)) {
			&__actions {
				grid-column-start: 4;
				justify-content: flex-end;
				@extend %display--flex;

				> * {
					margin: var(--app-bar__actions-margin);
				}
			}
		}

		@if(functions.in-array(fixed, index.$app-bar-settings)) {
			&--fixed {
				@extend %position--fixed;
				top: 0;
				left: 0;
				z-index: 2;
			}
		}

		.icon {
			@extend %cursor--pointer;
			color: var(--app-bar-font-color);
			--icon-size: #{functions.rem-calc(24px)};
		}

		@if(functions.in-array(fixed, index.$drawer-settings)) {
			&--drawer-fixed {
				@media #{media-queries.$sm-up} {
					#{$el}__title {
						// TODO make more dynamic
						margin: 0 0 0 calc(var(--drawer-width) + #{functions.rem-calc(32px)} - var(--icon-size) - #{functions.rem-calc(16px)});
					}
				}
			}
		}
	}

	:root {
		--app-bar-height: #{settings.$app-bar-height};
	}
}
